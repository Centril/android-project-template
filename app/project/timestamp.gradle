/*
 * Copyright (c) 2013 See AUTHORS file.
 * 
 * This file is part of RandomProject.
 * 
 * RandomProject is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * RandomProject is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with RandomProject. If not, see <http://www.gnu.org/licenses/>.
 */

def package = "com.random.project"

apply plugin: 'android'

public class GenerateCode extends DefaultTask {
	@Input
	Long value

	@OutputFile
	File outputFile

	@Input
	String usePackage

	@Input
	String className

	@TaskAction
	void taskAction() {
		getOutputFile().text = """\
package ${getUsePackage()};
public class ${getClassName()} {
	public static long getBuildDate() { return ${Long.toString( getValue() )}L; }
}
""";
	}
}

android.applicationVariants.all { variant ->
	File sourceFolder = file("${buildDir}/customCode/${variant.dirName}")

	def packagePath = package.tr(".", "/");

	// create a task that generates a java class
	def javaGenerationTask = tasks.create(name: "generatedTimestampCodeFor${variant.name.capitalize()}", type: GenerateCode) {
		usePackage package
		className "BuildTimestamp"
		value variant.name == 'release' ? new Date().getTime() : -1
		outputFile file("${sourceFolder.absolutePath}/" + packagePath + "/BuildTimestamp.java")
	}

	variant.registerJavaGeneratingTask(javaGenerationTask, sourceFolder)
}